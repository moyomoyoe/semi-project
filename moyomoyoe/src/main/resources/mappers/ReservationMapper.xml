<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moyomoyoe.reservation.model.dao.ReservationMapper">

    <!-- Store 테이블에 대한 결과 매핑 -->
    <resultMap id="storeMap" type="moyomoyoe.reservation.model.dto.StoreDTO">
        <id property="storeId" column="store_id"/>
        <result property="storeName" column="store_name"/>
        <result property="storeAddress" column="store_address"/>
        <result column="store_sort" property="storeSort"/>  <!-- 여기 매핑 중요 -->
        <result column="description" property="description"/>
    </resultMap>

    <!-- Schedule 테이블에 대한 결과 매핑 -->
    <resultMap id="scheduleMap" type="moyomoyoe.reservation.model.dto.ScheduleDTO">
        <id property="scheduleId" column="schedule_id"/>
        <result property="storeId" column="store_id"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="capacity" column="capacity"/>
    </resultMap>

    <!-- Reservation 테이블에 대한 결과 매핑 -->
    <resultMap id="reservationMap" type="moyomoyoe.reservation.model.dto.ReservationDTO">
        <id property="resId" column="res_id"/>
        <result property="userIdRes" column="user_id_res"/>
        <result property="customerNum" column="customer_num"/>
        <result property="scheduleId" column="schedule_id"/>
    </resultMap>

    <!-- StoreList 조회 -->
    <select id="getAllStores" resultMap="storeMap">
        SELECT * FROM tbl_store;
    </select>

    <!-- Store ID로 Store 조회 -->
    <select id="getStoreById" parameterType="int" resultMap="storeMap">
        SELECT * FROM tbl_store WHERE store_id = #{storeId};
    </select>

    <!-- 예약된 시간 조회 -->
    <select id="getReservedTimes" parameterType="int" resultType="string">
        SELECT CONCAT(start_time, ' - ', end_time)
        FROM tbl_schedule
        WHERE store_id = #{storeId};
    </select>

    <!-- 모든 예약된 일정 가져오기 -->
    <select id="getAllReservations" resultMap="scheduleMap">
        SELECT s.schedule_id, s.store_id, s.start_time, s.end_time, s.capacity, st.store_name
        FROM tbl_schedule s
                 JOIN tbl_store st ON s.store_id = st.store_id;
    </select>

    <!-- 스케줄 ID로 스케줄 상세 조회 -->
    <select id="getScheduleById" parameterType="int" resultMap="scheduleMap">
        SELECT s.schedule_id, s.store_id, s.start_time, s.end_time, s.capacity
        FROM tbl_schedule s
        WHERE s.schedule_id = #{scheduleId};
    </select>

    <!-- tbl_schedule 테이블에 데이터 삽입 -->
    <insert id="insertSchedule" parameterType="moyomoyoe.reservation.model.dto.ScheduleDTO" useGeneratedKeys="true" keyProperty="scheduleId">
        INSERT INTO tbl_schedule (store_id, start_time, end_time, capacity)
        VALUES (#{storeId}, #{startTime, jdbcType=TIME}, #{endTime, jdbcType=TIME}, #{capacity});
    </insert>

    <!-- tbl_reservation 테이블에 데이터 삽입 -->
    <insert id="insertReservation" parameterType="moyomoyoe.reservation.model.dto.ReservationDTO">
        INSERT INTO tbl_reservation (user_id_res, customer_num, schedule_id, res_date)
        VALUES (#{userIdRes}, #{customerNum}, #{scheduleId}, #{resDate});
    </insert>

    <!-- 예약 취소 쿼리 -->
    <delete id="cancelReservation">
        DELETE FROM tbl_reservation
        WHERE res_id = #{resId};
    </delete>

</mapper>